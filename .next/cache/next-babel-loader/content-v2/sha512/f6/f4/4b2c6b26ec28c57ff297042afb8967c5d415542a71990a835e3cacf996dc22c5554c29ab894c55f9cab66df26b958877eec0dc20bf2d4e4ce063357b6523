{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Masonry from \"react-masonry-component\";\nimport { Title, Section, Box, Text, ButtonOutline } from \"../../components/Core\";\nimport RotateImg from \"../../components/RotateImg\";\nimport { devWorks2 } from \"../../data\";\nimport { useWindowSize } from \"../../hooks\";\nimport { breakpoints } from \"../../utils\";\nconst WorkCard = styled(Box)``;\nconst WorkText = styled(Box)``;\n\nconst Grid = props => {\n  const size = useWindowSize();\n  const masonryOptions = {\n    transitionDuration: 1000\n  };\n  return size.width < breakpoints.lg ? __jsx(Masonry, _extends({\n    options: masonryOptions,\n    className: \"masonry-grid row\"\n  }, props)) : __jsx(Row, props);\n};\n\nconst Works = () => {\n  const {\n    0: items,\n    1: setItems\n  } = useState([]);\n  useEffect(() => {\n    setItems(devWorks2);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Section, {\n    className: \"position-relative pt-0\"\n  }, __jsx(Container, null, __jsx(Grid, null, items.map((item, index) => __jsx(Col, {\n    md: \"6\",\n    key: index,\n    className: \"filtr-item\"\n  }, __jsx(WorkCard, {\n    className: \"position-relative\",\n    mb: \"30px\"\n  }, __jsx(RotateImg, {\n    link: item.link,\n    imgSrc: item.thumbnail\n  }), __jsx(Box, {\n    pt: \"2.125rem\"\n  }, __jsx(WorkText, {\n    className: \"overflow-hidden text-center\"\n  }, __jsx(Text, {\n    variant: \"tag\",\n    mb: \"0.5rem\"\n  }, item.categories[0]), __jsx(Title, {\n    variant: \"cardLg\"\n  }, __jsx(Link, {\n    href: item.link\n  }, __jsx(\"a\", null, item.brand))))))))), __jsx(Box, {\n    pt: \"3rem\",\n    className: \"text-center\"\n  }, __jsx(ButtonOutline, null, \"Load more works\")))));\n};\n\nexport default Works;","map":null,"metadata":{},"sourceType":"module"}