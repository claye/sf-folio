{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"react-bootstrap\";\nimport { useScrollPosition } from \"@n8tb1t/use-scroll-position\";\nimport Link from \"next/link\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport Offcanvas from \"../Offcanvas\";\nimport NestedMenu from \"../NestedMenu\";\nimport { device } from \"../../utils\";\nimport Logo from \"../Logo\";\nimport { menuItems } from \"./menuItems\";\nconst SiteHeader = styled.header`\n  padding: 0;\n  position: absolute !important;\n  top: 0;\n  right: 0;\n  width: 100%;\n  z-index: 999;\n  @media ${device.lg} {\n    position: fixed !important;\n    transition: 0.4s;\n    &.scrolling {\n      transform: translateY(-100%);\n      transition: 0.4s;\n    }\n    &.reveal-header {\n      transform: translateY(0%);\n      box-shadow: 0 12px 34px -11px rgba(65, 62, 101, 0.1);\n      z-index: 9999;\n      background: ${({\n  dark,\n  theme\n}) => theme.colors.bg};\n    }\n  }\n`;\nconst ToggleButton = styled.button`\n  color: ${({\n  dark,\n  theme\n}) => theme.colors.front}!important;\n  border-color: ${({\n  dark,\n  theme\n}) => theme.colors.front}!important;\n`;\nconst Menu = styled.ul`\n  @media ${device.lg} {\n    display: flex;\n    justify-content: flex-end;\n  }\n  .dropdown-toggle {\n    cursor: pointer;\n  }\n  > li {\n    > .nav-link {\n      @media ${device.lg} {\n        color: ${({\n  dark,\n  theme\n}) => theme.colors.front}!important;\n        transition: 0.4s;\n        align-items: center;\n        display: inline-flex;\n        font-size: 15px;\n        font-weight: 700;\n        line-height: 24px;\n        padding-top: 18px !important;\n        padding-bottom: 18px !important;\n        padding-left: 18px !important;\n        padding-right: 18px !important;\n\n        text-transform: lowercase;\n\n        &.dropdown-toggle:after {\n          margin-left: 10px;\n          position: relative;\n          transform: rotate(90deg);\n          top: 1px;\n          content: \"\\\\ea06\";\n          border: none;\n          font-family: \"Grayic\";\n          font-size: 24px;\n          transition: 0.4s;\n          font-weight: 900;\n          line-height: 14px;\n        }\n      }\n    }\n    &.nav-item:hover > .nav-link,\n    &.nav-item.active > .nav-link {\n      color: ${({\n  theme\n}) => theme.colors.primary} !important;\n      &:after {\n        transform: rotate(-90deg);\n      }\n    }\n  }\n  .nav-item.dropdown {\n    @media ${device.lg} {\n      position: relative;\n      z-index: 99;\n    }\n    &:hover {\n      > .menu-dropdown {\n        @media ${device.lg} {\n          top: 90%;\n          right: 0;\n          opacity: 1;\n          pointer-events: visible;\n        }\n      }\n    }\n  }\n`;\nconst MenuDropdown = styled.ul`\n  list-style: none;\n  @media ${device.lg} {\n    top: 110%;\n    position: absolute;\n    min-width: 227px;\n    max-width: 227px;\n    box-shadow: 0 52px 54px rgba(65, 62, 101, 0.3);\n\n    background-color: ${({\n  dark,\n  theme\n}) => theme.colors.light};\n    padding: 15px 0px;\n    z-index: 99;\n    opacity: 0;\n    transition: opacity 0.4s, top 0.4s;\n    pointer-events: none;\n    left: -90%;\n    border: 1px solid #e5e5e5;\n    border-radius: 0 0 10px 10px;\n    display: block;\n    border-top: ${({\n  theme\n}) => `3px solid ${theme.colors.primary}`};\n  }\n  > .drop-menu-item {\n    color: ${({\n  theme\n}) => theme.colors.dark};\n    font-size: 15px;\n    font-weight: 300;\n    letter-spacing: -0.5px;\n    padding-left: 30px;\n    padding-right: 30px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n\n    a {\n      color: ${({\n  theme\n}) => theme.colors.dark} !important;\n      transition: all 0.3s ease-out;\n      position: relative;\n      display: flex;\n      align-items: center;\n      font-weight: 700;\n      text-transform: lowercase;\n      &.dropdown-toggle::after {\n        margin-left: 10px;\n        position: relative;\n        top: 1px;\n        content: \"\\\\ea06\";\n        border: none;\n        font-family: \"Grayic\";\n        font-size: 24px;\n        transition: 0.4s;\n        font-weight: 900;\n        line-height: 14px;\n      }\n    }\n\n    &:hover,\n    &.active {\n      > a {\n        color: ${({\n  theme\n}) => theme.colors.primary} !important;\n        text-decoration: none;\n        &::after {\n          transform: rotate(180deg);\n        }\n      }\n    }\n    &.dropdown {\n      position: relative;\n\n      &:hover {\n        > .menu-dropdown {\n          @media ${device.lg} {\n            top: 10px;\n            opacity: 1;\n            pointer-events: visible;\n            transform: translateX(-100%);\n          }\n        }\n      }\n      > .menu-dropdown {\n        border-top-color: ${({\n  theme\n}) => theme.colors.success};\n        @media ${device.lg} {\n          top: 10px;\n          left: 0%;\n          opacity: 0;\n          transform: translateX(-110%);\n          transition: 0.4s;\n          pointer-events: none;\n        }\n        > .drop-menu-item {\n          @media ${device.lg} {\n            padding-left: 30px;\n            padding-right: 30px;\n          }\n        }\n      }\n    }\n  }\n  &.dropdown-right {\n    left: auto;\n    right: -90%;\n  }\n`;\n\nconst Header = ({\n  isDark\n}) => {\n  const gContext = useContext(GlobalContext);\n  const {\n    0: showScrolling,\n    1: setShowScrolling\n  } = useState(false);\n  const {\n    0: showReveal,\n    1: setShowReveal\n  } = useState(false);\n  useScrollPosition(({\n    prevPos,\n    currPos\n  }) => {\n    if (currPos.y < 0) {\n      setShowScrolling(true);\n    } else {\n      setShowScrolling(false);\n    }\n\n    if (currPos.y < -300) {\n      setShowReveal(true);\n    } else {\n      setShowReveal(false);\n    }\n  });\n  return __jsx(React.Fragment, null, __jsx(SiteHeader, {\n    className: `sticky-header ${showScrolling ? \"scrolling\" : \"\"} ${showReveal ? \"reveal-header\" : \"\"}`,\n    dark: isDark ? 1 : 0\n  }, __jsx(Container, {\n    fluid: true\n  }, __jsx(\"nav\", {\n    className: \"navbar px-0 px-md-3 site-navbar offcanvas-active navbar-expand-lg navbar-light\"\n  }, __jsx(\"div\", {\n    className: \"brand-logo\"\n  }, __jsx(Logo, {\n    color: isDark ? \"light\" : \"dark\"\n  })), __jsx(\"div\", {\n    className: \"collapse navbar-collapse\"\n  }, __jsx(\"div\", {\n    className: \"navbar-nav ml-lg-auto mr-3\"\n  }, __jsx(Menu, {\n    className: \"navbar-nav d-none d-lg-flex\",\n    dark: isDark ? 1 : 0\n  }, menuItems.map((_ref, index) => {\n    let {\n      label,\n      isExternal = false,\n      name,\n      items\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, [\"label\", \"isExternal\", \"name\", \"items\"]);\n\n    const hasSubItems = Array.isArray(items);\n    return __jsx(React.Fragment, {\n      key: name + index\n    }, hasSubItems ? __jsx(\"li\", _extends({\n      className: \"nav-item dropdown\"\n    }, rest), __jsx(\"a\", {\n      className: \"nav-link dropdown-toggle\",\n      role: \"button\",\n      \"data-toggle\": \"dropdown\",\n      \"aria-expanded\": \"false\",\n      href: \"/#\",\n      onClick: e => e.preventDefault()\n    }, label), __jsx(MenuDropdown, {\n      className: \"menu-dropdown dropdown-right\",\n      dark: isDark ? 1 : 0\n    }, items.map((subItem, indexSub) => {\n      const hasInnerSubItems = Array.isArray(subItem.items);\n      return __jsx(React.Fragment, {\n        key: subItem.name + indexSub\n      }, hasInnerSubItems ? __jsx(\"li\", {\n        className: \"drop-menu-item dropdown\"\n      }, __jsx(\"a\", {\n        className: \"dropdown-toggle\",\n        role: \"button\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-expanded\": \"false\",\n        href: \"/#\",\n        onClick: e => e.preventDefault()\n      }, subItem.label), __jsx(MenuDropdown, {\n        className: \"menu-dropdown dropdown-right\",\n        dark: isDark ? 1 : 0\n      }, subItem.items.map((itemSubInner, indexSubInner) => {\n        const hasInnerMostItems = Array.isArray(itemSubInner.items);\n        return __jsx(React.Fragment, {\n          key: itemSubInner.name + indexSubInner\n        }, hasInnerMostItems ? __jsx(\"li\", {\n          className: \"drop-menu-item dropdown\"\n        }, __jsx(\"a\", {\n          className: \"dropdown-toggle\",\n          role: \"button\",\n          \"data-toggle\": \"dropdown\",\n          \"aria-expanded\": \"false\",\n          href: \"/#\",\n          onClick: e => e.preventDefault()\n        }, itemSubInner.label), __jsx(MenuDropdown, {\n          className: \"menu-dropdown dropdown-right\",\n          dark: isDark ? 1 : 0\n        }, itemSubInner.items.map((itemLast, indexLast) => __jsx(\"li\", {\n          className: \"drop-menu-item\",\n          key: itemLast.name + indexLast\n        }, itemLast.isExternal ? __jsx(\"a\", {\n          href: `${itemLast.name}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\"\n        }, itemLast.label) : __jsx(Link, {\n          href: `/${itemLast.name}`\n        }, __jsx(\"a\", null, itemLast.label)))))) : __jsx(\"li\", {\n          className: \"drop-menu-item\"\n        }, itemSubInner.isExternal ? __jsx(\"a\", {\n          href: `${itemSubInner.name}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\"\n        }, itemSubInner.label) : __jsx(Link, {\n          href: `/${itemSubInner.name}`\n        }, itemSubInner.label)));\n      }))) : __jsx(\"li\", {\n        className: \"drop-menu-item\"\n      }, subItem.isExternal ? __jsx(\"a\", {\n        href: `${subItem.name}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\"\n      }, subItem.label) : __jsx(Link, {\n        href: `/${subItem.name}`\n      }, __jsx(\"a\", null, subItem.label))));\n    }))) : __jsx(\"li\", _extends({\n      className: \"nav-item\"\n    }, rest), isExternal ? __jsx(\"a\", {\n      className: \"nav-link\",\n      href: `${name}`,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, label) : __jsx(Link, {\n      href: `/${name}`\n    }, __jsx(\"a\", {\n      className: \"nav-link\",\n      role: \"button\",\n      \"aria-expanded\": \"false\"\n    }, label))));\n  }), __jsx(\"li\", {\n    className: \"nav-item\"\n  }, __jsx(\"a\", {\n    className: \"nav-link\",\n    href: \"/#\",\n    onClick: e => {\n      e.preventDefault();\n      gContext.toggleContact();\n    }\n  }, \"contact.\"))))), __jsx(ToggleButton, {\n    className: `navbar-toggler btn-close-off-canvas ml-3 ${gContext.visibleOffCanvas ? \"collapsed\" : \"\"}`,\n    type: \"button\",\n    \"data-toggle\": \"collapse\",\n    \"data-target\": \"#mobile-menu\",\n    \"aria-controls\": \"mobile-menu\",\n    \"aria-expanded\": \"false\",\n    \"aria-label\": \"Toggle navigation\",\n    onClick: gContext.toggleOffCanvas,\n    dark: isDark ? 1 : 0\n  }, __jsx(\"i\", {\n    className: \"icon icon-menu-34 icon-burger d-block\"\n  }))))), __jsx(Offcanvas, {\n    show: gContext.visibleOffCanvas,\n    onHideOffcanvas: gContext.toggleOffCanvas\n  }, __jsx(NestedMenu, {\n    menuItems: menuItems\n  })));\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}