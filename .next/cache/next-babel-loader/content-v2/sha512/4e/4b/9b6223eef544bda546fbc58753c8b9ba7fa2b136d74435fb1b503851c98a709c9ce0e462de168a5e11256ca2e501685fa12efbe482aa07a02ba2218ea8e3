{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport { Box, Title, Text } from \"../Core\";\nconst WorkBox = styled(Box)``;\nconst TextBox = styled(Box)`\n  position: absolute;\n  overflow: hidden;\n  bottom: 0px;\n  left: 20px;\n  right: 20px;\n  opacity: 0;\n  border-radius: 8px;\n  z-index: 1;\n  padding: 1.25rem 1.875rem;\n  transition: 0.4s;\n  &::before {\n    position: absolute;\n    content: \"\";\n    background: ${({\n  theme\n}) => theme.colors.bg};\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: -1;\n    opacity: 0.9;\n  }\n  ${WorkBox}:hover & {\n    bottom: 20px;\n    opacity: 1;\n  }\n`;\n\nconst WorkCard = (_ref) => {\n  let {\n    workItem\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"workItem\"]);\n\n  return __jsx(WorkBox, _extends({\n    className: \"position-relative\"\n  }, rest), __jsx(Link, {\n    href: workItem.link\n  }, __jsx(\"a\", {\n    className: \"d-block\"\n  }, __jsx(\"img\", {\n    src: workItem.thumbnail,\n    alt: \"\",\n    className: \"w-100\"\n  }))), __jsx(TextBox, null, __jsx(Text, {\n    variant: \"tag\",\n    mb: 2\n  }, workItem.categories[0]), __jsx(Title, {\n    variant: \"card\"\n  }, __jsx(Link, {\n    href: workItem.link\n  }, __jsx(\"a\", null, workItem.brand, \" \")))));\n};\n\nexport default WorkCard;","map":null,"metadata":{},"sourceType":"module"}