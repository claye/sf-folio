{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport Logo from \"../Logo\";\nconst Overlay = styled.div`\n  position: fixed;\n  width: 100%;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  height: 100%;\n  z-index: 99999;\n  background: rgba(0, 0, 0, 0.5);\n  opacity: 1;\n  visibility: visible;\n  transition: all 0.3s ease-out;\n  &.hidden {\n    opacity: 0;\n    visibility: hidden;\n  }\n`;\nconst Drawer = styled.div`\n  position: fixed;\n  width: 20rem;\n  max-width: 100vw;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  height: 100%;\n  z-index: 999999;\n  background: #fff;\n  overflow-y: auto;\n  transform: translateX(0);\n  transition: all 0.3s ease-out;\n  &.hidden {\n    transform: translateX(100%);\n  }\n  .dropdown-menu {\n    position: static !important;\n    will-change: initial !important;\n    transform: initial !important;\n    float: none !important;\n  }\n`;\nconst LogoContainer = styled.div`\n  font-weight: 600;\n  font-size: 1.25rem;\n`;\nconst CloseWrapper = styled.div`\n  cursor: pointer;\n  height: 1.5rem;\n  width: 1.5rem;\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n  z-index: 10;\n  color: ${({\n  theme\n}) => theme.colors.dark};\n`;\n\nconst CloseButton = props => __jsx(CloseWrapper, props, __jsx(\"svg\", {\n  role: \"img\",\n  viewBox: \"0 0 24 24\",\n  css: `\n        fill: ${({\n    theme\n  }) => theme.colors.dark};\n        vertical-align: middle;\n        height: 1rem;\n        width: 1rem;\n      `\n}, __jsx(\"path\", {\n  d: \"M9.82 12L0 2.18 2.18 0 12 9.82 21.82 0 24 2.18 14.18 12 24 21.82 21.82 24 12 14.18 2.18 24 0 21.82z\",\n  css: `\n          fill: ${({\n    theme\n  }) => theme.colors.dark};\n        `\n})));\n\nconst Offcanvas = (_ref) => {\n  let {\n    show,\n    onHideOffcanvas,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"show\", \"onHideOffcanvas\", \"children\"]);\n\n  if (typeof document !== \"undefined\") {\n    if (show) {\n      document.querySelector(\"html\").classList.add(\"has-offcanvas\");\n      document.body.classList.add(\"has-offcanvas\");\n    } else {\n      document.querySelector(\"html\").classList.remove(\"has-offcanvas\");\n      document.body.classList.remove(\"has-offcanvas\");\n    }\n  }\n\n  return __jsx(\"div\", rest, __jsx(Overlay, {\n    className: show ? \"\" : \"hidden\",\n    onClick: onHideOffcanvas\n  }), __jsx(Drawer, {\n    className: show ? \"\" : \"hidden\"\n  }, __jsx(Container, null, __jsx(\"div\", {\n    className: \"p-3\"\n  }, __jsx(\"div\", {\n    className: \"mb-3 d-flex align-items-center justify-content-between\"\n  }, __jsx(LogoContainer, null, __jsx(Logo, {\n    onClick: onHideOffcanvas\n  })), __jsx(CloseButton, {\n    onClick: onHideOffcanvas\n  })), __jsx(\"div\", {\n    className: \"pt-4\"\n  }, children)))));\n};\n\nexport default Offcanvas;","map":null,"metadata":{},"sourceType":"module"}