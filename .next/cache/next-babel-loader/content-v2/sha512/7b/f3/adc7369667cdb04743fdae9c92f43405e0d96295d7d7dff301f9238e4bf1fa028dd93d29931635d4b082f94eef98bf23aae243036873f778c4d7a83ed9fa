{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { color } from \"styled-system\";\nimport { Box } from \"../Core\";\nimport GlobalContext from \"../../context/GlobalContext\";\nconst BoxWrapper = styled(Box)`\n  transition: 0.4s;\n  position: fixed;\n  right: 0;\n  transform: translateX(100%);\n  top: 30%;\n  z-index: 99;\n  &.opened {\n    transform: translate(0);\n  }\n`;\nconst Panel = styled(Box)`\n  box-shadow: 0 22px 34px rgba(22, 28, 45, 0.18);\n  border: transparent;\n  max-width: 185px;\n  padding-left: 13px;\n  padding-right: 13px;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  text-align: center;\n  border-bottom-left-radius: 25px;\n`;\nconst TextBox = styled(Box)`\n  color: #ffffff;\n  font-size: 13px;\n  font-weight: 700;\n  letter-spacing: -0.09px;\n  line-height: 26px;\n  padding-bottom: 8px;\n`;\nconst ButtonGroup = styled(Box)`\n  box-shadow: 0 12px 34px rgba(22, 28, 45, 0.2);\n  border-radius: 33px;\n  background-color: #ffffff;\n  overflow: hidden;\n  display: flex;\n  max-width: 153px;\n`;\nconst Button = styled.button`\n  background: transparent;\n  border: none;\n  width: 50%;\n  font-size: 11px;\n  font-weight: 700;\n  height: 42px;\n  padding-left: 15px;\n  padding-right: 15px;\n  letter-spacing: 1.38px;\n  text-transform: uppercase;\n  outline: none !important;\n  &.active {\n    background-color: #ced4e7;\n  }\n`;\nconst ButtonToggle = styled.button`\n  width: 30px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 0;\n  color: #fff;\n  font-size: 30px;\n  position: absolute;\n  left: 1px;\n  top: 0;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n  transform: translateX(-100%);\n  outline: none !important;\n  ${color};\n  i {\n    font-size: inherit;\n    pointer-events: none;\n    transition: 0.4s;\n    .opened & {\n      transform: scaleX(-1);\n    }\n  }\n`;\n\nconst ThemeSwitch = props => {\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n  const gContext = useContext(GlobalContext);\n  return __jsx(React.Fragment, null, __jsx(BoxWrapper, _extends({\n    className: `position-fixed ${active ? \"opened\" : \"\"}`\n  }, props), __jsx(Panel, {\n    bg: \"primary\",\n    className: \"position-relative\"\n  }, __jsx(TextBox, null, \"Change Version\"), __jsx(ButtonGroup, null, __jsx(Button, {\n    className: !gContext.theme.bodyDark ? \"active\" : \"\",\n    onClick: () => gContext.changeTheme({\n      bodyDark: false,\n      headerDark: false,\n      footerDark: false\n    })\n  }, \"Light\"), __jsx(Button, {\n    className: gContext.theme.bodyDark ? \"active\" : \"\",\n    onClick: () => gContext.changeTheme({\n      bodyDark: true,\n      headerDark: true,\n      footerDark: true\n    })\n  }, \"dark\")), __jsx(ButtonToggle, {\n    bg: \"primary\",\n    onClick: () => setActive(!active),\n    className: active ? \"opened\" : \"\"\n  }, __jsx(\"i\", {\n    className: \"icon icon-small-left\"\n  })))));\n};\n\nexport default ThemeSwitch;","map":null,"metadata":{},"sourceType":"module"}