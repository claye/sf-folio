{"ast":null,"code":"import _defineProperty from \"/Users/claye/dev/sagev2/sf-portfolio/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useContext } from \"react\";\nimport GlobalContext from \"../../context/GlobalContext\";\nvar themeConfigDefault = {\n  headerDark: false,\n  bodyDark: false,\n  footerDark: false\n};\n\nvar PageWrapper = function PageWrapper(_ref) {\n  var children = _ref.children,\n      _ref$darkTheme = _ref.darkTheme,\n      darkTheme = _ref$darkTheme === void 0 ? false : _ref$darkTheme,\n      _ref$themeConfig = _ref.themeConfig,\n      themeConfig = _ref$themeConfig === void 0 ? null : _ref$themeConfig;\n  var gContext = useContext(GlobalContext);\n  useEffect(function () {\n    if (darkTheme) {\n      gContext.changeTheme({\n        headerDark: true,\n        bodyDark: true,\n        footerDark: true\n      });\n    } else {\n      gContext.changeTheme(_objectSpread(_objectSpread({}, themeConfigDefault), themeConfig));\n    }\n  }, []);\n  return __jsx(React.Fragment, null, children);\n};\n\nexport default PageWrapper;","map":null,"metadata":{},"sourceType":"module"}