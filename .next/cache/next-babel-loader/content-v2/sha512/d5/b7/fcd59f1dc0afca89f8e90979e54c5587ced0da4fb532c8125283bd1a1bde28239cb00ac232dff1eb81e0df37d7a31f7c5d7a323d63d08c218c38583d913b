{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useContext } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport styled from \"styled-components\";\nimport { Modal } from \"react-bootstrap\";\nimport GlobalContext from \"../../context/GlobalContext\";\nimport { device } from \"../../utils\";\nconst ModalStyled = styled(Modal)`\n  .modal-dialog {\n    width: 100vw;\n    height: 100vh;\n    max-width: initial;\n    max-height: initial;\n    margin: 0;\n  }\n  .modal-content {\n    width: 100%;\n    height: 100%;\n    border: none;\n    border-radius: 0;\n    padding-top: 15px;\n    background: rgba(0, 0, 0, 0.75);\n    @media ${device.lg} {\n      padding-top: 30px;\n    }\n  }\n`;\nconst DivStyled = styled.div`\n  margin: 0 auto;\n  width: 90%;\n  height: 400px;\n  @media ${device.md} {\n    width: 70%;\n    height: 650px;\n  }\n  opacity: 0;\n  visibility: hidden;\n  transition: all 2s ease-out;\n  &.loaded {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\nconst CloseWrapper = styled.div`\n  cursor: pointer;\n  top: 0;\n  right: 1rem;\n  position: absolute;\n  height: 1.5rem;\n  width: 1.5rem;\n  align-items: center;\n  display: inline-flex;\n  justify-content: center;\n  z-index: 10;\n  color: #fff;\n  @media ${device.md} {\n    right: 2rem;\n  }\n`;\n\nconst CloseButton = props => __jsx(CloseWrapper, props, __jsx(\"svg\", {\n  role: \"img\",\n  viewBox: \"0 0 24 24\",\n  css: `\n        fill: currentcolor;\n        vertical-align: middle;\n        height: 1rem;\n        width: 1rem;\n      `\n}, __jsx(\"path\", {\n  d: \"M9.82 12L0 2.18 2.18 0 12 9.82 21.82 0 24 2.18 14.18 12 24 21.82 21.82 24 12 14.18 2.18 24 0 21.82z\",\n  fill: \"currentColor\"\n})));\n\nconst ModalVideo = props => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const gContext = useContext(GlobalContext);\n\n  const handleClose = () => {\n    setLoading(true);\n    gContext.toggleVideoModal();\n  };\n\n  return __jsx(ModalStyled, _extends({}, props, {\n    size: \"lg\",\n    centered: true,\n    show: gContext.videoModalVisible // onHide={gContext.toggleVideoModal}\n\n  }), __jsx(Modal.Body, {\n    className: \"text-center position-relative\"\n  }, __jsx(CloseButton, {\n    onClick: handleClose\n  }), __jsx(\"div\", {\n    className: `h-100 d-flex align-items-center w-100`\n  }, __jsx(DivStyled, {\n    className: `${loading ? \"loading\" : \"loaded\"}`\n  }, __jsx(ReactPlayer, {\n    url: `https://www.youtube.com/watch?v=zlInYm2JrFw`,\n    width: \"100%\",\n    height: \"100%\",\n    controls: true,\n    onReady: () => {\n      setLoading(false);\n    }\n  })))));\n};\n\nexport default ModalVideo;","map":null,"metadata":{},"sourceType":"module"}