{"ast":null,"code":"import _extends from \"/Users/claye/dev/sagev2/sf-portfolio/node_modules/next/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"/Users/claye/dev/sagev2/sf-portfolio/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/claye/dev/sagev2/sf-portfolio/src/components/ThemeSwitch/ThemeSwitch.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 30px;\\n  height: 50px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  border: 0;\\n  color: #fff;\\n  font-size: 30px;\\n  position: absolute;\\n  left: 1px;\\n  top: 0;\\n  border-top-left-radius: 10px;\\n  border-bottom-left-radius: 10px;\\n  transform: translateX(-100%);\\n  outline: none !important;\\n  \", \";\\n  i {\\n    font-size: inherit;\\n    pointer-events: none;\\n    transition: 0.4s;\\n    .opened & {\\n      transform: scaleX(-1);\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  background: transparent;\\n  border: none;\\n  width: 50%;\\n  font-size: 11px;\\n  font-weight: 700;\\n  height: 42px;\\n  padding-left: 15px;\\n  padding-right: 15px;\\n  letter-spacing: 1.38px;\\n  text-transform: uppercase;\\n  outline: none !important;\\n  &.active {\\n    background-color: #ced4e7;\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  box-shadow: 0 12px 34px rgba(22, 28, 45, 0.2);\\n  border-radius: 33px;\\n  background-color: #ffffff;\\n  overflow: hidden;\\n  display: flex;\\n  max-width: 153px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  color: #ffffff;\\n  font-size: 13px;\\n  font-weight: 700;\\n  letter-spacing: -0.09px;\\n  line-height: 26px;\\n  padding-bottom: 8px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  box-shadow: 0 22px 34px rgba(22, 28, 45, 0.18);\\n  border: transparent;\\n  max-width: 185px;\\n  padding-left: 13px;\\n  padding-right: 13px;\\n  padding-top: 15px;\\n  padding-bottom: 15px;\\n  text-align: center;\\n  border-bottom-left-radius: 25px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  transition: 0.4s;\\n  position: fixed;\\n  right: 0;\\n  transform: translateX(100%);\\n  top: 30%;\\n  z-index: 99;\\n  &.opened {\\n    transform: translate(0);\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { color } from \"styled-system\";\nimport { Box } from \"../Core\";\nimport GlobalContext from \"../../context/GlobalContext\";\nvar BoxWrapper = styled(Box)(_templateObject());\n_c = BoxWrapper;\nvar Panel = styled(Box)(_templateObject2());\n_c2 = Panel;\nvar TextBox = styled(Box)(_templateObject3());\n_c3 = TextBox;\nvar ButtonGroup = styled(Box)(_templateObject4());\n_c4 = ButtonGroup;\nvar Button = styled.button(_templateObject5());\n_c5 = Button;\nvar ButtonToggle = styled.button(_templateObject6(), color);\n_c6 = ButtonToggle;\n\nvar ThemeSwitch = function ThemeSwitch(props) {\n  _s();\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var gContext = useContext(GlobalContext);\n  return __jsx(React.Fragment, null, __jsx(BoxWrapper, _extends({\n    className: \"position-fixed \".concat(active ? \"opened\" : \"\")\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), __jsx(Panel, {\n    bg: \"primary\",\n    className: \"position-relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, __jsx(TextBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Change Version\"), __jsx(ButtonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    className: !gContext.theme.bodyDark ? \"active\" : \"\",\n    onClick: function onClick() {\n      return gContext.changeTheme({\n        bodyDark: false,\n        headerDark: false,\n        footerDark: false\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Light\"), __jsx(Button, {\n    className: gContext.theme.bodyDark ? \"active\" : \"\",\n    onClick: function onClick() {\n      return gContext.changeTheme({\n        bodyDark: true,\n        headerDark: true,\n        footerDark: true\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"dark\")), __jsx(ButtonToggle, {\n    bg: \"primary\",\n    onClick: function onClick() {\n      return setActive(!active);\n    },\n    className: active ? \"opened\" : \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: \"icon icon-small-left\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(ThemeSwitch, \"UT6PHzayLnqYKb6DlhpSVi5+zBY=\");\n\n_c7 = ThemeSwitch;\nexport default ThemeSwitch;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"BoxWrapper\");\n$RefreshReg$(_c2, \"Panel\");\n$RefreshReg$(_c3, \"TextBox\");\n$RefreshReg$(_c4, \"ButtonGroup\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"ButtonToggle\");\n$RefreshReg$(_c7, \"ThemeSwitch\");","map":{"version":3,"sources":["/Users/claye/dev/sagev2/sf-portfolio/src/components/ThemeSwitch/ThemeSwitch.js"],"names":["React","useState","useContext","styled","color","Box","GlobalContext","BoxWrapper","Panel","TextBox","ButtonGroup","Button","button","ButtonToggle","ThemeSwitch","props","active","setActive","gContext","theme","bodyDark","changeTheme","headerDark","footerDark"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAEA,IAAMC,UAAU,GAAGJ,MAAM,CAACE,GAAD,CAAT,mBAAhB;KAAME,U;AAYN,IAAMC,KAAK,GAAGL,MAAM,CAACE,GAAD,CAAT,oBAAX;MAAMG,K;AAYN,IAAMC,OAAO,GAAGN,MAAM,CAACE,GAAD,CAAT,oBAAb;MAAMI,O;AASN,IAAMC,WAAW,GAAGP,MAAM,CAACE,GAAD,CAAT,oBAAjB;MAAMK,W;AASN,IAAMC,MAAM,GAAGR,MAAM,CAACS,MAAV,oBAAZ;MAAMD,M;AAiBN,IAAME,YAAY,GAAGV,MAAM,CAACS,MAAV,qBAgBdR,KAhBc,CAAlB;MAAMS,Y;;AA2BN,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACDd,QAAQ,CAAC,KAAD,CADP;AAAA,MACtBe,MADsB;AAAA,MACdC,SADc;;AAE7B,MAAMC,QAAQ,GAAGhB,UAAU,CAACI,aAAD,CAA3B;AAEA,SACE,4BAEE,MAAC,UAAD;AACE,IAAA,SAAS,2BAAoBU,MAAM,GAAG,QAAH,GAAc,EAAxC;AADX,KAEMD,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIE,MAAC,KAAD;AAAO,IAAA,EAAE,EAAC,SAAV;AAAoB,IAAA,SAAS,EAAC,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,SAAS,EAAE,CAACG,QAAQ,CAACC,KAAT,CAAeC,QAAhB,GAA2B,QAA3B,GAAsC,EADnD;AAEE,IAAA,OAAO,EAAE;AAAA,aACPF,QAAQ,CAACG,WAAT,CAAqB;AACnBD,QAAAA,QAAQ,EAAE,KADS;AAEnBE,QAAAA,UAAU,EAAE,KAFO;AAGnBC,QAAAA,UAAU,EAAE;AAHO,OAArB,CADO;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAaE,MAAC,MAAD;AACE,IAAA,SAAS,EAAEL,QAAQ,CAACC,KAAT,CAAeC,QAAf,GAA0B,QAA1B,GAAqC,EADlD;AAEE,IAAA,OAAO,EAAE;AAAA,aACPF,QAAQ,CAACG,WAAT,CAAqB;AACnBD,QAAAA,QAAQ,EAAE,IADS;AAEnBE,QAAAA,UAAU,EAAE,IAFO;AAGnBC,QAAAA,UAAU,EAAE;AAHO,OAArB,CADO;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,CAFF,EA4BE,MAAC,YAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMN,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA,KAFX;AAGE,IAAA,SAAS,EAAEA,MAAM,GAAG,QAAH,GAAc,EAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CA5BF,CAJF,CAFF,CADF;AA8CD,CAlDD;;GAAMF,W;;MAAAA,W;AAoDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { color } from \"styled-system\";\r\nimport { Box } from \"../Core\";\r\nimport GlobalContext from \"../../context/GlobalContext\";\r\n\r\nconst BoxWrapper = styled(Box)`\r\n  transition: 0.4s;\r\n  position: fixed;\r\n  right: 0;\r\n  transform: translateX(100%);\r\n  top: 30%;\r\n  z-index: 99;\r\n  &.opened {\r\n    transform: translate(0);\r\n  }\r\n`;\r\n\r\nconst Panel = styled(Box)`\r\n  box-shadow: 0 22px 34px rgba(22, 28, 45, 0.18);\r\n  border: transparent;\r\n  max-width: 185px;\r\n  padding-left: 13px;\r\n  padding-right: 13px;\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n  text-align: center;\r\n  border-bottom-left-radius: 25px;\r\n`;\r\n\r\nconst TextBox = styled(Box)`\r\n  color: #ffffff;\r\n  font-size: 13px;\r\n  font-weight: 700;\r\n  letter-spacing: -0.09px;\r\n  line-height: 26px;\r\n  padding-bottom: 8px;\r\n`;\r\n\r\nconst ButtonGroup = styled(Box)`\r\n  box-shadow: 0 12px 34px rgba(22, 28, 45, 0.2);\r\n  border-radius: 33px;\r\n  background-color: #ffffff;\r\n  overflow: hidden;\r\n  display: flex;\r\n  max-width: 153px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: transparent;\r\n  border: none;\r\n  width: 50%;\r\n  font-size: 11px;\r\n  font-weight: 700;\r\n  height: 42px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  letter-spacing: 1.38px;\r\n  text-transform: uppercase;\r\n  outline: none !important;\r\n  &.active {\r\n    background-color: #ced4e7;\r\n  }\r\n`;\r\n\r\nconst ButtonToggle = styled.button`\r\n  width: 30px;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 0;\r\n  color: #fff;\r\n  font-size: 30px;\r\n  position: absolute;\r\n  left: 1px;\r\n  top: 0;\r\n  border-top-left-radius: 10px;\r\n  border-bottom-left-radius: 10px;\r\n  transform: translateX(-100%);\r\n  outline: none !important;\r\n  ${color};\r\n  i {\r\n    font-size: inherit;\r\n    pointer-events: none;\r\n    transition: 0.4s;\r\n    .opened & {\r\n      transform: scaleX(-1);\r\n    }\r\n  }\r\n`;\r\n\r\nconst ThemeSwitch = (props) => {\r\n  const [active, setActive] = useState(false);\r\n  const gContext = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      {/* <!-- Footer section --> */}\r\n      <BoxWrapper\r\n        className={`position-fixed ${active ? \"opened\" : \"\"}`}\r\n        {...props}\r\n      >\r\n        <Panel bg=\"primary\" className=\"position-relative\">\r\n          <TextBox>Change Version</TextBox>\r\n          <ButtonGroup>\r\n            <Button\r\n              className={!gContext.theme.bodyDark ? \"active\" : \"\"}\r\n              onClick={() =>\r\n                gContext.changeTheme({\r\n                  bodyDark: false,\r\n                  headerDark: false,\r\n                  footerDark: false,\r\n                })\r\n              }\r\n            >\r\n              Light\r\n            </Button>\r\n            <Button\r\n              className={gContext.theme.bodyDark ? \"active\" : \"\"}\r\n              onClick={() =>\r\n                gContext.changeTheme({\r\n                  bodyDark: true,\r\n                  headerDark: true,\r\n                  footerDark: true,\r\n                })\r\n              }\r\n            >\r\n              dark\r\n            </Button>\r\n          </ButtonGroup>\r\n          <ButtonToggle\r\n            bg=\"primary\"\r\n            onClick={() => setActive(!active)}\r\n            className={active ? \"opened\" : \"\"}\r\n          >\r\n            <i className=\"icon icon-small-left\"></i>\r\n          </ButtonToggle>\r\n        </Panel>\r\n      </BoxWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThemeSwitch;\r\n"]},"metadata":{},"sourceType":"module"}