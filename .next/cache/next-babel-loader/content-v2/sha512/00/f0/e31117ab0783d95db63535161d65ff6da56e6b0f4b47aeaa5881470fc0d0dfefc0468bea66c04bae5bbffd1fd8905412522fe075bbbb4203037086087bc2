{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\nimport { Box } from \"../Core\";\n\nconst IconCircle = (_ref) => {\n  let {\n    bg = \"success\",\n    color = \"#fff\",\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"bg\", \"color\", \"children\"]);\n\n  return __jsx(Box, _extends({\n    bg: bg,\n    color: color,\n    px: \"1.875rem\",\n    py: \"1.25rem\",\n    borderRadius: \"50rem\",\n    css: `\n      text-align: center;\n      .icon {\n        font-weight: bolder;\n        font-size: 2rem !important;\n        letter-spacing: -1.2px;\n        line-height: 1.375 !important;\n      }\n    `\n  }, rest), children);\n};\n\nexport default IconCircle;","map":null,"metadata":{},"sourceType":"module"}