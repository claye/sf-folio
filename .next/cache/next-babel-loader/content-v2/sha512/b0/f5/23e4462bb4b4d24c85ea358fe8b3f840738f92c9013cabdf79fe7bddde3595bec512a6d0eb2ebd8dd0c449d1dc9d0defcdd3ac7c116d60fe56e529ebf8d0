{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { space, border, typography, shadow, flexbox, layout } from \"styled-system\";\nconst SwitchStyled = styled.div`\n  display: inline-block;\n  cursor: pointer;\n  width: 72px;\n  height: 33px;\n  border-radius: 17px;\n  transition: all 0.3s ease-out;\n  background: ${({\n  active,\n  theme,\n  bg\n}) => active ? theme.colors[bg] : `#eae9f2`};\n  position: relative;\n  margin: 0 15px;\n  white-space: nowrap;\n  ${border};\n  ${space};\n  ${typography};\n  ${shadow};\n  ${flexbox};\n  ${layout};\n`;\nconst Round = styled.span`\n  width: 21px;\n  height: 21px;\n  background-color: #ffffff;\n  position: absolute;\n  transition: all 0.3s ease-out;\n  left: ${({\n  active\n}) => active ? `calc(100% - 33px)` : `0`};\n  margin-left: 6px;\n  top: 0;\n  margin-top: 6px;\n  transition: 0.4s;\n  border-radius: 500px;\n  pointer-events: none;\n`;\n\nconst Switch = (_ref) => {\n  let {\n    bg = \"secondary\",\n    onClick = () => {}\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"bg\", \"onClick\"]);\n\n  const {\n    0: active,\n    1: setActive\n  } = useState(false);\n\n  const handleSwitch = () => {\n    setActive(!active);\n    onClick();\n  };\n\n  return __jsx(SwitchStyled, _extends({\n    bg: bg\n  }, rest, {\n    onClick: handleSwitch,\n    active: active ? 1 : 0\n  }), __jsx(Round, {\n    active: active ? 1 : 0\n  }));\n};\n\nexport default Switch;","map":null,"metadata":{},"sourceType":"module"}