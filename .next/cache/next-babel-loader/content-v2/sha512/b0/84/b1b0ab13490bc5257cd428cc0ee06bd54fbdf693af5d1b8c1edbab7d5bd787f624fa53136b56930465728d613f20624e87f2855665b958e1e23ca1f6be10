{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nconst themeConfigDefault = {\n  headerDark: false,\n  bodyDark: false,\n  footerDark: false\n};\n\nconst GlobalProvider = ({\n  children\n}) => {\n  const {\n    0: theme,\n    1: setTheme\n  } = useState(themeConfigDefault);\n  const {\n    0: videoModalVisible,\n    1: setVideoModalVisible\n  } = useState(false);\n  const {\n    0: aboutVisible,\n    1: setAboutVisible\n  } = useState(false);\n  const {\n    0: contactVisible,\n    1: setContactVisible\n  } = useState(false);\n  const {\n    0: visibleOffCanvas,\n    1: setVisibleOffCanvas\n  } = useState(false);\n\n  const changeTheme = (themeConfig = themeConfigDefault) => {\n    setTheme(_objectSpread({}, themeConfig));\n  };\n\n  const toggleVideoModal = () => {\n    setVideoModalVisible(!videoModalVisible);\n  };\n\n  const toggleAbout = () => {\n    setAboutVisible(!aboutVisible);\n  };\n\n  const closeAbout = () => {\n    setAboutVisible(false);\n  };\n\n  const toggleContact = () => {\n    setContactVisible(!contactVisible);\n  };\n\n  const closeContact = () => {\n    setContactVisible(false);\n  };\n\n  const toggleOffCanvas = () => {\n    setVisibleOffCanvas(!visibleOffCanvas);\n  };\n\n  return __jsx(GlobalContext.Provider, {\n    value: {\n      theme,\n      changeTheme,\n      videoModalVisible,\n      toggleVideoModal,\n      aboutVisible,\n      toggleAbout,\n      closeAbout,\n      contactVisible,\n      toggleContact,\n      closeContact,\n      visibleOffCanvas,\n      toggleOffCanvas\n    }\n  }, children);\n};\n\nexport default GlobalContext;\nexport { GlobalProvider };","map":null,"metadata":{},"sourceType":"module"}